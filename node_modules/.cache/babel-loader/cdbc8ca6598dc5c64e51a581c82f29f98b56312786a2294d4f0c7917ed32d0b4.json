{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);const API_URL='/api';export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check token and set user on initial load\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){// Verify token with backend\nfetch(\"\".concat(API_URL,\"/auth/verify\"),{headers:{'Authorization':\"Bearer \".concat(token)}}).then(res=>res.json()).then(data=>{if(data.user){setUser(data.user);}else{localStorage.removeItem('token');}}).catch(()=>{localStorage.removeItem('token');}).finally(()=>{setLoading(false);});}else{setLoading(false);}},[]);const signup=async userData=>{setLoading(true);setError(null);try{const response=await fetch(\"\".concat(API_URL,\"/auth/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});const data=await response.json();if(!response.ok)throw new Error(data.error||'Signup failed');return data;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const signin=async credentials=>{setLoading(true);setError(null);try{console.log('Attempting signin with:',credentials);const response=await fetch(\"\".concat(API_URL,\"/auth/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});console.log('Response status:',response.status);const text=await response.text();console.log('Raw response:',text);let data;try{data=JSON.parse(text);}catch(e){console.error('Failed to parse response:',e);throw new Error('Invalid response from server');}console.log('Parsed response data:',data);if(!response.ok){throw new Error(data.error||'Login failed');}setUser(data.user);localStorage.setItem('token',data.token);return data;}catch(err){console.error('Signin error:',err);setError(err.message);throw err;}finally{setLoading(false);}};const signout=()=>{setUser(null);localStorage.removeItem('token');};const queryAI=async query=>{const token=localStorage.getItem('token');try{const response=await fetch(\"\".concat(API_URL,\"/query\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({query})});const data=await response.json();if(!response.ok)throw new Error(data.error||'Query failed');return data;}catch(err){setError(err.message);throw err;}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,error,signup,signin,signout,queryAI},children:children});}export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","API_URL","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","fetch","concat","headers","then","res","json","data","removeItem","catch","finally","signup","userData","response","method","body","JSON","stringify","ok","Error","err","message","signin","credentials","console","log","status","text","parse","e","setItem","signout","queryAI","query","Provider","value","useAuth"],"sources":["C:/Users/lucas/Desktop/CONCORDIA/QUARCC/LAB/QuarccAI/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nconst API_URL = '/api';\n\nexport function AuthProvider({ children }) {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Check token and set user on initial load\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            // Verify token with backend\n            fetch(`${API_URL}/auth/verify`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then(res => res.json())\n            .then(data => {\n                if (data.user) {\n                    setUser(data.user);\n                } else {\n                    localStorage.removeItem('token');\n                }\n            })\n            .catch(() => {\n                localStorage.removeItem('token');\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const signup = async (userData) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(`${API_URL}/auth/signup`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n            const data = await response.json();\n            if (!response.ok) throw new Error(data.error || 'Signup failed');\n            return data;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const signin = async (credentials) => {\n        setLoading(true);\n        setError(null);\n        try {\n            console.log('Attempting signin with:', credentials);\n            const response = await fetch(`${API_URL}/auth/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(credentials),\n            });\n            \n            console.log('Response status:', response.status);\n            const text = await response.text();\n            console.log('Raw response:', text);\n            \n            let data;\n            try {\n                data = JSON.parse(text);\n            } catch (e) {\n                console.error('Failed to parse response:', e);\n                throw new Error('Invalid response from server');\n            }\n            console.log('Parsed response data:', data);\n            \n            if (!response.ok) {\n                throw new Error(data.error || 'Login failed');\n            }\n            \n            setUser(data.user);\n            localStorage.setItem('token', data.token);\n            return data;\n        } catch (err) {\n            console.error('Signin error:', err);\n            setError(err.message);\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const signout = () => {\n        setUser(null);\n        localStorage.removeItem('token');\n    };\n\n    const queryAI = async (query) => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await fetch(`${API_URL}/query`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ query })\n            });\n            const data = await response.json();\n            if (!response.ok) throw new Error(data.error || 'Query failed');\n            return data;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ \n            user, \n            loading, \n            error, \n            signup, \n            signin, \n            signout,\n            queryAI \n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}